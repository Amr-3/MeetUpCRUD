# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go


trigger:
  branches:
    include:
    - master


pool:
  vmImage: 'ubuntu-latest'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.14.3' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  #modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code
  
jobs:
- job: BuildAndTest
  timeoutInMinutes: 5
  steps:
  - script: |
      mkdir -p '$(GOBIN)'
      mkdir -p '$(GOPATH)/pkg'
      mkdir -p '$(modulePath)'
      shopt -s extglob
      shopt -s dotglob
      mv !(gopath) '$(modulePath)'
      echo '##vso[task.prependpath]$(GOBIN)'
      echo '##vso[task.prependpath]$(GOROOT)/bin'
    displayName: 'Set up the Go workspace'
  - task: GoTool@0
    inputs:
      version: '1.14.3'

  - script: |
      go version
      go mod init
      go get -v -t -d ./...
      
      if [ -f Gopkg.toml ]; then
          curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
          dep ensure
      fi
      go build -v .
      #ls $GOPATH/src -l
      #go run main.go

    workingDirectory: '$(modulePath)'
    displayName: 'Get dependencies, then build'

  - task: DockerCompose@0
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'Azure for Students(a4d1a12e-9259-498c-94b0-46024c2a2913)'
      azureContainerRegistry: '{"loginServer":"meetup1test.azurecr.io", "id" : "/subscriptions/a4d1a12e-9259-498c-94b0-46024c2a2913/resourceGroups/Test-vms/providers/Microsoft.ContainerRegistry/registries/meetup1test"}'
      dockerComposeFile: '**/docker-compose.yml'
      action: 'Build services'
      includeLatestTag: true

  - task: DockerCompose@0
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'Azure for Students(a4d1a12e-9259-498c-94b0-46024c2a2913)'
      azureContainerRegistry: '{"loginServer":"meetup1test.azurecr.io", "id" : "/subscriptions/a4d1a12e-9259-498c-94b0-46024c2a2913/resourceGroups/Test-vms/providers/Microsoft.ContainerRegistry/registries/meetup1test"}'
      dockerComposeFile: '**/docker-compose.yml'
      action: 'Push services'
      includeLatestTag: true